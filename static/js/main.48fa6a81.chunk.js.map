{"version":3,"sources":["hooks/useFormValidation.js","constants.js","services/validator.service.js","components/search-contact/search-contact.component.jsx","components/new-contact/create-contact.component.jsx","state/contexts/contacts.context.js","app-loader.jsx","components/update-contact/update-contact.component.jsx","components/delete-contact/delete-contact.component.jsx","components/contact-list/contact-item.component.jsx","components/contact-list/contacts.component.jsx","components/contact-profile/contact-profile.component.jsx","layout.component.jsx","notifier.jsx","state/constants/contacts.constants.js","state/reducers/contacts.reducers.js","axios.js","state/actions/contacts.actions.js","App.js","serviceWorker.js","index.js"],"names":["useFormValidation","initialState","validate","submitHandler","context","_useState","useState","Object","objectSpread","_useState2","slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","isSubmitting","setSubmitting","validateInputs","validationErrors","useEffect","keys","length","console","log","handleInputChange","event","defineProperty","target","name","value","handleSubmit","handleBlur","newContact","email","fullname","phone","address","gender","searchContact","key","contactValidator","test","searchContactValidator","SearchContact","_useFormValidation","react_default","a","createElement","className","Form","Input","action","icon","color","onClick","placeholder","onChange","onBlur","error","AddContact","_ref","match","contactId","Field","control","iconPosition","Select","options","text","Button","content","basic","Message","header","ContactsContext","React","createContext","css","_templateObject","AppLoader","UpdateContact","useContext","contact","getContact","updateContact","loading","params","id","app_loader","occupation","DeleteContact","Dropdown","Item","style","ContactItem","dropDownTrigger","Icon","Table","Row","Cell","Checkbox","width","height","backgroundColor","borderRadius","display","alignItems","justifyContent","size","react_router_dom","to","Menu","position","item","pointing","trigger","concat","_id","delete_contact_component","Contacts","contacts","getContacts","contactRow","map","contact_item_component","unstackable","Body","ContactProfile","Segment","Group","compact","floated","Label","circular","secondary","Header","Layout","Sider","Content","Footer","DefaultLayout","collapsed","setCollapsed","isMobile","setIsMobile","updatePredicate","window","innerWidth","addEventListener","removeEventListener","layout","minHeight","collapsible","onCollapse","theme","breakpoint","collapsedWidth","padding","borderBottom","search_contact_component","background","react_router","path","component","Contact","exact","render","props","create_contact_component","assign","textAlign","Notifier","errorMessage","successMessage","clearErrors","notify","message","tag","toast","onClose","react_toastify","contactConstants","nothing","contactReducer","state","arguments","undefined","type","payload","data","axiosInstance","axios","create","headers","Content-Type","defaults","baseURL","dispatch","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","t0","stop","_ref2","_callee2","_context2","_x","apply","this","_ref3","_callee3","_context3","patch","_","omit","_x2","App","_useReducer","useReducer","_useReducer2","contacts_context","Provider","notifier","basename","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48fa6a81.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport function useFormValidation (initialState, validate, submitHandler, context) {\r\n    let [values, setValues] = useState({...initialState});\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n    useEffect(() => {setValues({...initialState})}, [initialState])\r\n\r\n    useEffect(() => {\r\n        if (isSubmitting) {\r\n            if (Object.keys(errors).length === 0 ) {\r\n                submitHandler(values);\r\n                console.log('values', values)\r\n                console.log('valid')\r\n                setSubmitting(false);\r\n            }\r\n            else {\r\n                console.log('invalid')\r\n                setSubmitting(false);\r\n            }\r\n        }\r\n        \r\n    }, [errors])\r\n\r\n    function handleInputChange (event) {\r\n        setValues({\r\n            ...values, \r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    function validateInputs () {\r\n        const validationErrors = validate(values);\r\n        setErrors(validationErrors)\r\n    }\r\n\r\n    function handleBlur () {\r\n        validateInputs();\r\n    }\r\n\r\n    function handleSubmit () {\r\n        validateInputs();\r\n        setSubmitting(true);\r\n    }\r\n\r\n    return { values, handleInputChange, handleSubmit, handleBlur, errors }\r\n}","export const initialState = {\r\n    newContact: {\r\n        email: \"\",\r\n        fullname: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        gender: \"\"\r\n    },\r\n    searchContact: {\r\n        key: \"\"\r\n    }\r\n}","export const  contactValidator = (values) => {\r\n    let errors = {};\r\n    // Email Errors\r\n  if (!values.email) {\r\n    errors.email = \"Required Email\";\r\n    return errors\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n    return errors\r\n  }\r\n  // Fullname Errors\r\n  if (!values.fullname) {\r\n    errors.fullname = \"Required Fullname\";\r\n    return errors\r\n  } else if (values.fullname.length < 6) {\r\n    errors.fullname = \"Fullname must be at least 6 characters\";\r\n    return errors\r\n  }\r\n  return errors;\r\n}\r\n\r\nexport const searchContactValidator = (values) => {\r\n    let errors = {}\r\n\r\n    if (!values.key) {\r\n        errors.key = \"Search Key is required\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n// export const ValidatorService = {\r\n//     contactValidator\r\n// }","import React from 'react';\r\nimport { Form, Input, Button } from 'semantic-ui-react';\r\n\r\nimport { useFormValidation } from \"../../hooks\";\r\nimport { initialState } from '../../constants';\r\nimport { searchContactValidator } from '../../services';\r\nimport './search-contact.css';\r\n\r\nfunction SearchContact () {\r\n    const { \r\n            values, \r\n            handleInputChange, \r\n            handleSubmit,\r\n            handleBlur,\r\n            errors\r\n        } = useFormValidation(initialState.searchContact, searchContactValidator, null, 'search');\r\n\r\n    return (\r\n        <div className=\"search-contact-wrap\">\r\n            <Form className=\"search-form\">       \r\n                <Input\r\n                className=\"search-input\" \r\n                    action={{ icon: 'search', color: 'blue', onClick: handleSubmit }} \r\n                    name=\"key\" placeholder='Search...' \r\n                    onChange={handleInputChange}\r\n                    onBlur={handleBlur}\r\n                    error={errors.key && true} />\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchContact;","import React, { useState } from 'react';\r\nimport { Form, Input, Select, Modal, Icon, Button, Message } from 'semantic-ui-react';\r\n\r\nimport { useFormValidation } from \"../../hooks\";\r\nimport { initialState } from '../../constants';\r\nimport { contactValidator } from '../../services';\r\n\r\nimport './create-contact.css';\r\n\r\nfunction AddContact ({match, contactId}) {\r\n    const { \r\n            values, \r\n            handleInputChange, \r\n            handleSubmit, \r\n            handleBlur,\r\n            errors,\r\n        } = useFormValidation(initialState.newContact, contactValidator);\r\n    const genderOptions = [\r\n        { text: 'Female', value: 'female' },\r\n        { text: 'Male', value: 'male' }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"add-contact-wrap\">\r\n            {/* <Modal open={isOpen} size=\"small\">\r\n                <Modal.Header>\r\n\r\n                </Modal.Header>\r\n\r\n                <Modal.Content> */}\r\n                    <Form>\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"email\"\r\n                            icon=\"mail\"\r\n                            placeholder=\"Email\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            onBlur={handleBlur}\r\n                            error={errors.email && true}\r\n                            />\r\n                            \r\n                            { errors.email && <p > {errors.email} </p>}\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"fullname\"\r\n                            icon=\"pencil\"\r\n                            placeholder=\"Fullname\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            onBlur={handleBlur}\r\n                            error={errors.fullname && true}\r\n                            />\r\n                        { errors.fullname && <p > {errors.fullname} </p>}\r\n\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"phone\"\r\n                            icon=\"phone square\"\r\n                            placeholder=\"Phone\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"address\"\r\n                            icon=\"address card\"\r\n                            placeholder=\"Address\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n\r\n                        <Form.Field\r\n                            control={Select}\r\n                            name=\"gender\"\r\n                            placeholder=\"Gender\"\r\n                            options={genderOptions}\r\n                            />\r\n\r\n                        <Button \r\n                            content=\"Add Contact\"\r\n                            basic\r\n                            color=\"blue\"\r\n                            icon=\"add\"\r\n                            onClick={handleSubmit}\r\n                            />\r\n                    </Form>\r\n\r\n                    { errors.email && <Message error header={errors.email} />}\r\n                {/* </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button \r\n                        content=\"Add Contact\"\r\n                        basic\r\n                        color=\"blue\"\r\n                        icon=\"add\"\r\n                        />\r\n                    <Button \r\n                        content=\"Cancel\"\r\n                        basic\r\n                        color=\"red\"\r\n                        onClick={()=>openModal(false)}\r\n                        />\r\n                </Modal.Actions> */}\r\n            {/* </Modal> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddContact ;","import React from 'react';\r\n\r\nconst ContactsContext = React.createContext();\r\n\r\nexport default ContactsContext;","import React from 'react'\r\nimport { css } from '@emotion/core'\r\nimport { Container } from 'semantic-ui-react';\r\nimport { HashLoader } from 'react-spinners';\r\n\r\nconst override = css`\r\n    display: block;\r\n    margin: 0 auto;\r\n    border-color: red;\r\n`;\r\n\r\nfunction AppLoader () {\r\n\r\n    return (\r\n        // <HashLoader\r\n        //     css={override}\r\n        //     sizeUnit={\"px\"}\r\n        //     size={100}\r\n        //     color={'#0469b9'}\r\n        //     heightUnit={500}\r\n        //     loading={true}\r\n        // />\r\n        <div className=\"app-loader\">\r\n            <div className=\"loadings\"></div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AppLoader;","import React, { useEffect, useContext, } from 'react';\r\nimport { Form, Input, Select, Modal, Icon, Button, Message } from 'semantic-ui-react';\r\n\r\nimport { useFormValidation } from \"../../hooks\";\r\nimport { contactValidator } from '../../services';\r\nimport ContactsContext from '../../state/contexts/contacts.context';\r\nimport AppLoader from '../../app-loader';\r\n\r\nfunction UpdateContact ({match}) {\r\n    const context = useContext(ContactsContext);\r\n    const { contact, getContact, updateContact, loading } = context;\r\n\r\n    useEffect(()=> {\r\n        getContact(match.params.id)\r\n    }, [])\r\n\r\n    const { \r\n        values, \r\n        handleInputChange, \r\n        handleSubmit, \r\n        handleBlur,\r\n        errors,\r\n    } = useFormValidation(contact, contactValidator, updateContact, 'update');\r\n    console.log(loading)\r\n\r\n    return (\r\n        <div className=\"relative add-contact-wrap\">\r\n            {/* <Modal open={isOpen} size=\"small\">\r\n                <Modal.Header>\r\n\r\n                </Modal.Header>\r\n\r\n                <Modal.Content> */}\r\n                    {loading && <AppLoader /> }\r\n                    <Form>\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"email\"\r\n                            icon=\"mail\"\r\n                            value={values.email || ''}\r\n                            placeholder=\"Email\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            onBlur={handleBlur}\r\n                            error={errors.email && true}\r\n                            />\r\n                            \r\n                            { errors.email && <p > {errors.email} </p>}\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"fullname\"\r\n                            icon=\"pencil\"\r\n                            value={values.fullname || ''}\r\n                            placeholder=\"Fullname\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            onBlur={handleBlur}\r\n                            error={errors.fullname && true}\r\n                            />\r\n                        { errors.fullname && <p > {errors.fullname} </p>}\r\n\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"phone\"\r\n                            icon=\"phone square\"\r\n                            value={values.phone || ''}\r\n                            placeholder=\"Phone\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"address\"\r\n                            icon=\"address card\"\r\n                            value={values.address || ''}\r\n                            placeholder=\"Address\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"occupation\"\r\n                            icon=\"address card\"\r\n                            value={values.occupation || ''}\r\n                            placeholder=\"Address\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n\r\n                        <Button \r\n                            content=\"Update Contact\"\r\n                            basic\r\n                            color=\"blue\"\r\n                            icon=\"user\"\r\n                            onClick={handleSubmit}\r\n                            />\r\n                    </Form>\r\n\r\n                    { errors.email && <Message error header={errors.email} />}\r\n                {/* </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button \r\n                        content=\"Add Contact\"\r\n                        basic\r\n                        color=\"blue\"\r\n                        icon=\"add\"\r\n                        />\r\n                    <Button \r\n                        content=\"Cancel\"\r\n                        basic\r\n                        color=\"red\"\r\n                        onClick={()=>openModal(false)}\r\n                        />\r\n                </Modal.Actions> */}\r\n            {/* </Modal> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateContact ;\r\n","import React from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\nconst DeleteContact = () => {\r\n\r\n    return (\r\n        <Dropdown.Item text='Delete' icon=\"user delete\" style={{color: 'red'}} />\r\n    )\r\n};\r\n\r\nexport default DeleteContact;","import React from 'react';\r\nimport { Table, Checkbox, Icon, Menu, Dropdown } from 'semantic-ui-react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n// import userIcon from '../../assets/images/user.jpg'\r\n\r\nimport DeleteContact from '../delete-contact/delete-contact.component';\r\n\r\nconst ContactItem = ({contact}) => {\r\n\r\n    const dropDownTrigger = <Icon name=\"ellipsis vertical\" />\r\n    const style= {\r\n        width: '40px',\r\n        height: '40px',\r\n        backgroundColor: '#c1c1c1',\r\n        borderRadius: '50%',\r\n        color: '#ffffff !important',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n\r\n      // address: \"No 3 Onikpa Road, Lagos\"\r\n  // createdAt: \"2019-07-18T20:49:14.465Z\"\r\n  // email: \"odogwu@gmail.com\"\r\n  // facebook: \"https://www.facebook.com/nzediegwu1\"\r\n  // fullname: \"Odogwu nsoffor\"\r\n  // occupation: \"Software Engineer\"\r\n  // phone: \"2347048923983\"\r\n  // updatedAt: \"2019-07-18T20:49:14.465Z\"\r\n  // __v: 0\r\n  // _id: \"5d30db4aa1f1f50017f2279e\"\r\n\r\n    return (\r\n        <Table.Row>\r\n            <Table.Cell><Checkbox /></Table.Cell>\r\n            <Table.Cell><div className=\"user-icon\" style={style}><Icon name=\"user\" size=\"big\" /></div></Table.Cell>\r\n            {/* <Table.Cell><span className=\"ant-avatar ant-avatar-lg ant-avatar-circle ant-avatar-image\"><img src={userIcon} alt=\"user\" /></span></Table.Cell> */}\r\n            <Table.Cell><Link to=\"/profile\">{contact.fullname}</Link></Table.Cell>\r\n            <Table.Cell>{contact.email}</Table.Cell>\r\n            <Table.Cell>{contact.phone}</Table.Cell>\r\n            <Table.Cell>{contact.address}</Table.Cell>\r\n            <Table.Cell>\r\n                <Menu.Menu position='right'>\r\n                    <Dropdown item pointing='top right' trigger={dropDownTrigger} icon={null}>\r\n                        <Dropdown.Menu>                                   \r\n                                <NavLink to={`/edit-contact/${contact._id}`}>\r\n                            <Dropdown.Item text='Edit' icon=\"edit\" />\r\n                            </NavLink>\r\n                            <DeleteContact />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Menu>\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}\r\n\r\nexport default ContactItem;","import React, { useContext, useEffect } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nimport ContactItem from './contact-item.component';\r\nimport ContactsContext from '../../state/contexts/contacts.context';\r\nimport AppLoader from '../../app-loader';\r\nimport './contact-list.css';\r\n\r\nfunction Contacts () {\r\n  const context = useContext(ContactsContext);\r\n  const { contacts, getContacts, loading } = context;\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n  },[])\r\n\r\n  const contactRow = contacts && contacts.map(contact => {\r\n    return <ContactItem key={contact._id} contact={contact} />\r\n  })\r\n\r\n\r\n    return (\r\n      <div className=\"relative\">\r\n        {loading &&<AppLoader /> }\r\n      <Table basic='very' unstackable>\r\n        <Table.Body>\r\n          {contactRow}\r\n        </Table.Body>\r\n      </Table>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport { Segment, Button, Label } from 'semantic-ui-react';\r\n\r\nimport './contact-profile.scss';\r\n\r\nconst ContactProfile = () => {\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment className=\"profile-header\">\r\n              <Button compact size='small' floated='right'>\r\n                Clear\r\n              </Button>\r\n              Event Log <Label circular>80</Label>\r\n            </Segment>\r\n            <Segment secondary>\r\n              <pre>jkuty</pre>\r\n            </Segment>\r\n          </Segment.Group>\r\n    )\r\n}\r\n\r\nexport default ContactProfile;","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport { Layout} from 'antd';\r\nimport { Icon, Button } from 'semantic-ui-react'\r\n\r\nimport SearchContact from './components/search-contact/search-contact.component';\r\nimport AddContact from './components/new-contact/create-contact.component';\r\nimport UpdateContact from './components/update-contact/update-contact.component';\r\nimport Contact from './components/contact-list/contacts.component';\r\nimport ContactProfile from './components/contact-profile/contact-profile.component';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nfunction DefaultLayout ({match}) {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    updatePredicate();\r\n    window.addEventListener(\"resize\", updatePredicate);\r\n\r\n    return () => window.removeEventListener(\"resize\", updatePredicate);\r\n  })\r\n\r\n  function toggle () {\r\n    setCollapsed(!collapsed);\r\n  }\r\n\r\n  function updatePredicate () {\r\n    setIsMobile(window.innerWidth <= 576 );\r\n  }\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider \r\n          collapsible \r\n          collapsed={collapsed} \r\n          onCollapse={toggle} \r\n          theme=\"light\" \r\n          width=\"235px\" \r\n          breakpoint=\"md\" \r\n          collapsedWidth={isMobile ? 0 : 80}>\r\n          <div className=\"app-brand\">\r\n            <div className=\"app-brand__logo\">\r\n              <Icon name=\"address book outline\" size=\"big\"/>\r\n            </div>\r\n            <div className=\"app-brand__title\">\r\n              <h3>&nbsp; &nbsp; Contacts</h3>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"app-link \">\r\n            <Link to=\"/new-contact\">\r\n                <div className=\"app-link__item margin-bottom\">\r\n                <span className=\"app-link__item-icon\"><Icon name=\"add\" color=\"blue\"/></span> &nbsp; &nbsp;\r\n                <span className=\"app-link__item-description\"><Button className=\"new-contact__btn\" content=\"New Contact\" /></span>\r\n                </div>\r\n            </Link>\r\n\r\n            <Link to=\"/\">\r\n            <div className=\"app-link__item\">\r\n              <span className=\"app-link__item-icon\"><Icon name=\"list\" /></span> &nbsp; &nbsp;\r\n              <span className=\"app-link__item-description\">All contacts</span>\r\n            </div>\r\n            </Link>\r\n\r\n            <div className=\"app-link__item\">\r\n              <span className=\"app-link__item-icon\"><Icon name=\"undo alternate\" /></span> &nbsp; &nbsp;\r\n              <span className=\"app-link__item-description\">Frequently contacted</span>\r\n            </div>\r\n            <div className=\"app-link__item\">\r\n              <span className=\"app-link__item-icon\"><Icon name=\"star\" /></span> &nbsp; &nbsp;\r\n              <span className=\"app-link__item-description\">Starred contacts</span>\r\n            </div>\r\n          </div>\r\n        </Sider>\r\n        <Layout>\r\n          <Header style={{ padding: 0, backgroundColor: '#ffffff', borderBottom: '1px solid #edeeee' }} theme=\"light\">\r\n            <SearchContact />\r\n          </Header>\r\n          <Content>\r\n            <div style={{ background: '#fff', minHeight: 360 }}>\r\n                <Switch>\r\n                    <Route path=\"/\" component={Contact} exact/>\r\n                    <Route path=\"/profile\" component={ContactProfile}/>\r\n                    <Route path=\"/new-contact\" render={(props) => <AddContact {...props} contactId=\"meeeee\"/>}/>\r\n                    <Route path=\"/edit-contact/:id\" component={UpdateContact} />\r\n                </Switch>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n      </Layout>\r\n  );\r\n}\r\n\r\nexport default DefaultLayout;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport ContactsContext from './state/contexts/contacts.context';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n \r\nfunction Notifier() {\r\n    const context = useContext(ContactsContext)\r\n    const { errorMessage, successMessage, clearErrors } = context;\r\n    const notify = (message, tag) => toast[tag](message, {\r\n        onClose: () => clearErrors()\r\n      });\r\n\r\n    useEffect(()=> {\r\n        if (errorMessage) {\r\n            notify(errorMessage, 'error');\r\n        }\r\n        if (successMessage) {\r\n            notify(successMessage, 'success')\r\n        }\r\n    }, [errorMessage, successMessage])\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\n  export default Notifier;","export const contactConstants = {\r\n    GET_CONTACTS_REQUEST: \"GET_CONTACTS_REQUEST\",\r\n    GET_CONTACTS_SUCCESS: \"GET_CONTACTS_SUCCESS\",\r\n    GET_CONTACTS_FAILURE: \"GET_CONTACTS_FAILURE\",\r\n    GET_CONTACT_REQUEST: \"GET_CONTACT_REQUEST\",\r\n    GET_CONTACT_SUCCESS: \"GET_CONTACT_SUCCESS\",\r\n    UPDATE_CONTACT_REQUEST: \"UPDATE_CONTACT_REQUEST\",\r\n    UPDATE_CONTACT_SUCCESS: \"UPDATE_CONTACT_SUCCESS\",\r\n    UPDATE_CONTACT_FAILURE: \"UPDATE_CONTACT_FAILURE\",\r\n    CLEAR_ERRORS: \"CLEAR_ERRORS\"\r\n}","import {contactConstants } from '../constants/contacts.constants'\r\n\r\nexport const initialState = {\r\n    contacts: [],\r\n    contact: { nothing: 'for you'},\r\n    loading: false,\r\n    errorMessage: null,\r\n    successMessage: null\r\n}\r\n\r\nexport const contactReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case contactConstants.GET_CONTACTS_REQUEST:\r\n            return {\r\n                ...state,\r\n               loading: true\r\n            }\r\n        case contactConstants.GET_CONTACTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                contacts: action.payload.data,\r\n                loading: false\r\n            }\r\n\r\n        case contactConstants.GET_CONTACTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMessage: action.error.message\r\n            }\r\n        \r\n        case contactConstants.GET_CONTACT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case contactConstants.GET_CONTACT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                contact: action.payload.data,\r\n                loading: false\r\n            }\r\n\r\n        case contactConstants.UPDATE_CONTACT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case contactConstants.UPDATE_CONTACT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                contact: action.payload.data,\r\n                successMessage: action.payload.message,\r\n                loading: false\r\n            }\r\n\r\n        case contactConstants.UPDATE_CONTACT_FAILURE:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.payload.message,\r\n                loading: false\r\n            }\r\n\r\n        case contactConstants.CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                errorMessage: null,\r\n                successMessage: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n})\r\n\r\naxiosInstance.defaults.baseURL = \"https://contacts-registry.herokuapp.com/\"\r\n\r\nexport default axiosInstance;","import { contactConstants } from '../constants/contacts.constants';\r\nimport axiosInstance from '../../axios';\r\nimport _ from 'lodash';\r\n\r\nexport const getContacts = (dispatch) => async () => {\r\n    dispatch({type: contactConstants.GET_CONTACTS_REQUEST});\r\n    try {\r\n        const response = await  axiosInstance.get('/contacts')\r\n        dispatch({type: contactConstants.GET_CONTACTS_SUCCESS, payload: response.data})\r\n    }\r\n    catch(error) {\r\n        dispatch({type: contactConstants.GET_CONTACTS_FAILURE, error})\r\n        console.log('error: ', error)\r\n    }\r\n}\r\n\r\nexport const getContact = (dispatch) => async (id) => {\r\n    dispatch({type: contactConstants.GET_CONTACT_REQUEST})\r\n    try {\r\n        const response = await axiosInstance.get(`/contacts/${id}`)\r\n        dispatch({type: contactConstants.GET_CONTACT_SUCCESS, payload: response.data})\r\n    }\r\n    catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const updateContact = (dispatch) => async (contact) => {\r\n    dispatch({type: contactConstants.UPDATE_CONTACT_REQUEST})\r\n    try {\r\n        const response = await axiosInstance.patch(`/contacts/${contact._id}`, {\r\n            ..._.omit(contact, ['_id'])\r\n        })\r\n        dispatch({type: contactConstants.UPDATE_CONTACT_SUCCESS, payload: response.data})\r\n    }\r\n    catch(error) {\r\n        dispatch({type: contactConstants.UPDATE_CONTACT_FAILURE, error})\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const clearErrors = (dispatch) => () => {\r\n    dispatch({type: contactConstants.CLEAR_ERRORS})\r\n}","import React, { useReducer } from 'react';\r\nimport { Route, HashRouter as Router } from 'react-router-dom';\r\n\r\nimport DefaultLayout from './layout.component';\r\nimport ContactsContext from './state/contexts/contacts.context';\r\nimport Notifier from './notifier';\r\nimport { initialState, contactReducer } from './state/reducers/contacts.reducers';\r\nimport { getContacts, getContact, updateContact, clearErrors } from './state/actions/contacts.actions'\r\n\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(contactReducer, initialState)\r\n\r\n  return (\r\n    <ContactsContext.Provider\r\n      value={{\r\n        ...state,\r\n        getContacts: getContacts(dispatch),\r\n        getContact: getContact(dispatch),\r\n        clearErrors: clearErrors(dispatch),\r\n        updateContact: updateContact(dispatch)\r\n      }}\r\n     >\r\n       <Notifier />\r\n      <Router basename=\"/\">\r\n        <Route path=\"/\" component={DefaultLayout}/>\r\n      </Router>\r\n    </ContactsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n// [‎19-‎Jun-‎19 9:27 AM]  Joy Ichetaonye:  \r\n// @RequestParam(value = \"pageNum\", required = false, defaultValue = \"1\") Integer pageNum,\r\n// @RequestParam(value = \"vendorNum\", required = false, defaultValue = \"\") String vendorNum,\r\n// @RequestParam(value = \"customerNum\", required = false, defaultValue = \"\") String custNum,\r\n// @RequestParam(value = \"location\", required = false, defaultValue = \"\") String location,\r\n// @RequestParam(value = \"status\", required = false, defaultValue = \"5\") int status,\r\n// @RequestParam(value = \"pageSize\", required = false, defaultValue = \"10\") Integer pageSize,\r\n// @RequestParam(value = \"startDate\", required = false, defaultValue = \"10\") String startDate,\r\n// @RequestParam(value = \"endDate\", required = false, defaultValue = \"10\") String endDate, \r\n \r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}