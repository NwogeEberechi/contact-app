{"version":3,"sources":["hooks/useFormValidation.js","constants.js","services/validator.service.js","components/search-contact/search-contact.component.jsx","components/new-contact/create-contact.component.jsx","components/update-contact/update-contact.component.jsx","components/delete-contact/delete-contact.component.jsx","components/contact-list/contact-item.component.jsx","components/contact-list/contacts.component.jsx","components/contact-profile/contact-profile.component.jsx","layout.component.jsx","App.js","serviceWorker.js","index.js"],"names":["useFormValidation","initialState","validate","submitHandler","_useState","useState","_useState2","Object","slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","isSubmitting","setSubmitting","validateInputs","validationErrors","useEffect","keys","length","console","log","handleInputChange","event","objectSpread","defineProperty","target","name","value","handleSubmit","handleBlur","newContact","email","fullname","phone","address","gender","searchContact","key","contactValidator","test","searchContactValidator","SearchContact","_useFormValidation","react_default","a","createElement","className","Form","Input","action","icon","color","onClick","placeholder","onChange","onBlur","error","Button","content","style","marginLeft","AddContact","_ref","match","contactId","Field","control","iconPosition","Select","options","text","basic","Message","header","UpdateContact","react_router_dom","to","Dropdown","Item","DeleteContact","ContactItem","contact","dropDownTrigger","Icon","Table","Row","Cell","Checkbox","width","height","backgroundColor","borderRadius","display","alignItems","justifyContent","size","Menu","position","item","pointing","trigger","update_contact_component","delete_contact_component","Contacts","contacts","i","push","concat","age","contactRow","map","contact_item_component","unstackable","Body","ContactProfile","Segment","Group","compact","floated","Label","circular","secondary","Header","Layout","Sider","Content","Footer","DefaultLayout","collapsed","setCollapsed","isMobile","setIsMobile","updatePredicate","window","innerWidth","addEventListener","removeEventListener","layout","minHeight","collapsible","onCollapse","theme","breakpoint","collapsedWidth","padding","borderBottom","search_contact_component","background","react_router","path","component","Contact","exact","render","props","create_contact_component","assign","textAlign","App","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa411124.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport function useFormValidation (initialState, validate, submitHandler) {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isSubmitting) {\r\n            if (Object.keys(errors).length === 0 ) {\r\n                // submitHandler();\r\n                console.log('values', values)\r\n                console.log('valid')\r\n                setSubmitting(false);\r\n            }\r\n            else {\r\n                console.log('invalid')\r\n                setSubmitting(false);\r\n            }\r\n        }\r\n        \r\n    }, [errors])\r\n\r\n    function handleInputChange (event) {\r\n        setValues({\r\n            ...values, \r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    function validateInputs () {\r\n        const validationErrors = validate(values);\r\n        setErrors(validationErrors)\r\n    }\r\n\r\n    function handleBlur () {\r\n        validateInputs();\r\n    }\r\n\r\n    function handleSubmit () {\r\n        validateInputs();\r\n        setSubmitting(true);\r\n    }\r\n\r\n    return { values, handleInputChange, handleSubmit, handleBlur, errors }\r\n}","export const initialState = {\r\n    newContact: {\r\n        email: \"\",\r\n        fullname: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        gender: \"\"\r\n    },\r\n    searchContact: {\r\n        key: \"\"\r\n    }\r\n}","export const  contactValidator = (values) => {\r\n    let errors = {};\r\n    // Email Errors\r\n  if (!values.email) {\r\n    errors.email = \"Required Email\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n  // Fullname Errors\r\n  if (!values.fullname) {\r\n    errors.fullname = \"Required Fullname\";\r\n  } else if (values.fullname.length < 6) {\r\n    errors.fullname = \"Fullname must be at least 6 characters\";\r\n  }\r\n  return errors;\r\n}\r\n\r\nexport const searchContactValidator = (values) => {\r\n    let errors = {}\r\n\r\n    if (!values.key) {\r\n        errors.key = \"Search Key is required\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n// export const ValidatorService = {\r\n//     contactValidator\r\n// }","import React from 'react';\r\nimport { Form, Input, Button } from 'semantic-ui-react';\r\n\r\nimport { useFormValidation } from \"../../hooks\";\r\nimport { initialState } from '../../constants';\r\nimport { searchContactValidator } from '../../services';\r\nimport './search-contact.css';\r\n\r\nfunction SearchContact () {\r\n    const { \r\n            values, \r\n            handleInputChange, \r\n            handleSubmit,\r\n            handleBlur,\r\n            errors\r\n        } = useFormValidation(initialState.searchContact, searchContactValidator);\r\n\r\n    return (\r\n        <div className=\"search-contact-wrap\">\r\n            <Form>       \r\n                <Input \r\n                    action={{ icon: 'search', color: 'blue', onClick: handleSubmit }} \r\n                    name=\"key\" placeholder='Search...' \r\n                    onChange={handleInputChange}\r\n                    onBlur={handleBlur}\r\n                    error={errors.key && true} />\r\n                {values.key !== \"\" && <Button content=\"Clear\" style={{ marginLeft: '8px'  }} />}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchContact;","import React, { useState } from 'react';\r\nimport { Form, Input, Select, Modal, Icon, Button, Message } from 'semantic-ui-react';\r\n\r\nimport { useFormValidation } from \"../../hooks\";\r\nimport { initialState } from '../../constants';\r\nimport { contactValidator } from '../../services';\r\n\r\nimport './create-contact.css';\r\n\r\nfunction AddContact ({match, contactId}) {\r\n\r\n    const { \r\n            values, \r\n            handleInputChange, \r\n            handleSubmit, \r\n            handleBlur,\r\n            errors,\r\n        } = useFormValidation(initialState.newContact, contactValidator);\r\n    const genderOptions = [\r\n        { text: 'Female', value: 'female' },\r\n        { text: 'Male', value: 'male' }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"add-contact-wrap\">\r\n            {/* <Modal open={isOpen} size=\"small\">\r\n                <Modal.Header>\r\n\r\n                </Modal.Header>\r\n\r\n                <Modal.Content> */}\r\n                    <Form>\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"email\"\r\n                            icon=\"mail\"\r\n                            placeholder=\"Email\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            onBlur={handleBlur}\r\n                            error={errors.email && true}\r\n                            />\r\n                            \r\n                            { errors.email && <p > {errors.email} </p>}\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"fullname\"\r\n                            icon=\"pencil\"\r\n                            placeholder=\"Fullname\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            onBlur={handleBlur}\r\n                            error={errors.fullname && true}\r\n                            />\r\n                        { errors.fullname && <p > {errors.fullname} </p>}\r\n\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"phone\"\r\n                            icon=\"phone square\"\r\n                            placeholder=\"Phone\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n\r\n                        <Form.Field\r\n                            control={Input}\r\n                            name=\"address\"\r\n                            icon=\"address card\"\r\n                            placeholder=\"Address\"\r\n                            iconPosition=\"left\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n\r\n                        <Form.Field\r\n                            control={Select}\r\n                            name=\"gender\"\r\n                            placeholder=\"Gender\"\r\n                            options={genderOptions}\r\n                            />\r\n\r\n                        <Button \r\n                            content=\"Add Contact\"\r\n                            basic\r\n                            color=\"blue\"\r\n                            icon=\"add\"\r\n                            onClick={handleSubmit}\r\n                            />\r\n                    </Form>\r\n\r\n                    { errors.email && <Message error header={errors.email} />}\r\n                {/* </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button \r\n                        content=\"Add Contact\"\r\n                        basic\r\n                        color=\"blue\"\r\n                        icon=\"add\"\r\n                        />\r\n                    <Button \r\n                        content=\"Cancel\"\r\n                        basic\r\n                        color=\"red\"\r\n                        onClick={()=>openModal(false)}\r\n                        />\r\n                </Modal.Actions> */}\r\n            {/* </Modal> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddContact ;","import React from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst UpdateContact = () => {\r\n\r\n    return (\r\n        <NavLink to=\"/edit-contact/2\">\r\n            <Dropdown.Item text='Edit' icon=\"edit\" />\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default UpdateContact;","import React from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\nconst DeleteContact = () => {\r\n\r\n    return (\r\n        <Dropdown.Item text='Delete' icon=\"user delete\" style={{color: 'red'}} />\r\n    )\r\n};\r\n\r\nexport default DeleteContact;","import React from 'react';\r\nimport { Table, Checkbox, Icon, Menu, Dropdown } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n// import userIcon from '../../assets/images/user.jpg'\r\n\r\nimport UpdateContact from '../update-contact/update-contact.component';\r\nimport DeleteContact from '../delete-contact/delete-contact.component';\r\n\r\nconst ContactItem = ({contact}) => {\r\n\r\n    const dropDownTrigger = <Icon name=\"ellipsis vertical\" />\r\n    const style= {\r\n        width: '40px',\r\n        height: '40px',\r\n        backgroundColor: '#c1c1c1',\r\n        borderRadius: '50%',\r\n        color: '#ffffff !important',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n\r\n    return (\r\n        <Table.Row>\r\n            <Table.Cell><Checkbox /></Table.Cell>\r\n            <Table.Cell><div className=\"user-icon\" style={style}><Icon name=\"user\" size=\"big\" /></div></Table.Cell>\r\n            {/* <Table.Cell><span className=\"ant-avatar ant-avatar-lg ant-avatar-circle ant-avatar-image\"><img src={userIcon} alt=\"user\" /></span></Table.Cell> */}\r\n            <Table.Cell><Link to=\"/profile\">{contact.name}</Link></Table.Cell>\r\n            <Table.Cell>{contact.address}</Table.Cell>\r\n            <Table.Cell>\r\n                <Menu.Menu position='right'>\r\n                    <Dropdown item pointing='top right' trigger={dropDownTrigger} icon={null}>\r\n                        <Dropdown.Menu>                                   \r\n                            <UpdateContact />\r\n                            <DeleteContact />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Menu>\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}\r\n\r\nexport default ContactItem;","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nimport ContactItem from './contact-item.component';\r\nimport './contact-list.css';\r\n\r\nfunction Contacts () {\r\n      \r\n  const contacts = [];\r\n  for (let i = 0; i < 46; i++) {\r\n    contacts.push({\r\n      key: i,\r\n      name: `Edward King ${i}`,\r\n      age: 32,\r\n      address: `London, Park Lane no. ${i}`,\r\n    });\r\n  }\r\n\r\n  const contactRow = contacts.map(contact => {\r\n    return <ContactItem key={contact.key} contact={contact} />\r\n  })\r\n\r\n\r\n    return (\r\n      <Table basic='very' unstackable>\r\n        <Table.Body>\r\n          {contactRow}\r\n        </Table.Body>\r\n      </Table>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport { Segment, Button, Label } from 'semantic-ui-react';\r\n\r\nimport './contact-profile.scss';\r\n\r\nconst ContactProfile = () => {\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment className=\"profile-header\">\r\n              <Button compact size='small' floated='right'>\r\n                Clear\r\n              </Button>\r\n              Event Log <Label circular>80</Label>\r\n            </Segment>\r\n            <Segment secondary>\r\n              <pre>jkuty</pre>\r\n            </Segment>\r\n          </Segment.Group>\r\n    )\r\n}\r\n\r\nexport default ContactProfile;","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport { Layout} from 'antd';\r\nimport { Icon, Button } from 'semantic-ui-react'\r\n\r\nimport SearchContact from './components/search-contact/search-contact.component';\r\nimport AddContact from './components/new-contact/create-contact.component';\r\nimport Contact from './components/contact-list/contacts.component';\r\nimport ContactProfile from './components/contact-profile/contact-profile.component';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nfunction DefaultLayout ({match}) {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    updatePredicate();\r\n    window.addEventListener(\"resize\", updatePredicate);\r\n\r\n    return () => window.removeEventListener(\"resize\", updatePredicate);\r\n  })\r\n\r\n  function toggle () {\r\n    setCollapsed(!collapsed);\r\n  }\r\n\r\n  function updatePredicate () {\r\n    setIsMobile(window.innerWidth <= 576 );\r\n  }\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider \r\n          collapsible \r\n          collapsed={collapsed} \r\n          onCollapse={toggle} \r\n          theme=\"light\" \r\n          width=\"235px\" \r\n          breakpoint=\"md\" \r\n          collapsedWidth={isMobile ? 0 : 80}>\r\n          <div className=\"app-brand\">\r\n            <div className=\"app-brand__logo\">\r\n              <Icon name=\"address book outline\" size=\"big\"/>\r\n            </div>\r\n            <div className=\"app-brand__title\">\r\n              <h3>&nbsp; &nbsp; Contacts</h3>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"app-link \">\r\n            <Link to=\"/new-contact\">\r\n                <div className=\"app-link__item margin-bottom\">\r\n                <span className=\"app-link__item-icon\"><Icon name=\"add\" color=\"blue\"/></span> &nbsp; &nbsp;\r\n                <span className=\"app-link__item-description\"><Button className=\"new-contact__btn\" content=\"New Contact\" /></span>\r\n                </div>\r\n            </Link>\r\n\r\n            <Link to=\"/\">\r\n            <div className=\"app-link__item\">\r\n              <span className=\"app-link__item-icon\"><Icon name=\"list\" /></span> &nbsp; &nbsp;\r\n              <span className=\"app-link__item-description\">All contacts</span>\r\n            </div>\r\n            </Link>\r\n\r\n            <div className=\"app-link__item\">\r\n              <span className=\"app-link__item-icon\"><Icon name=\"undo alternate\" /></span> &nbsp; &nbsp;\r\n              <span className=\"app-link__item-description\">Frequently contacted</span>\r\n            </div>\r\n            <div className=\"app-link__item\">\r\n              <span className=\"app-link__item-icon\"><Icon name=\"star\" /></span> &nbsp; &nbsp;\r\n              <span className=\"app-link__item-description\">Starred contacts</span>\r\n            </div>\r\n          </div>\r\n        </Sider>\r\n        <Layout>\r\n          <Header style={{ padding: 0, backgroundColor: '#ffffff', borderBottom: '1px solid #edeeee' }} theme=\"light\">\r\n            <SearchContact />\r\n          </Header>\r\n          <Content>\r\n            <div style={{ background: '#fff', minHeight: 360 }}>\r\n                <Switch>\r\n                    <Route path=\"/\" component={Contact} exact/>\r\n                    <Route path=\"/profile\" component={ContactProfile}/>\r\n                    <Route path=\"/new-contact\" render={(props) => <AddContact {...props} contactId=\"meeeee\"/>}/>\r\n                    <Route path=\"/edit-contact/:id\" component={AddContact} />\r\n                </Switch>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n      </Layout>\r\n  );\r\n}\r\n\r\nexport default DefaultLayout;\r\n","import React from 'react';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport DefaultLayout from './layout.component';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route path=\"/\" component={DefaultLayout}/>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n// [‎19-‎Jun-‎19 9:27 AM]  Joy Ichetaonye:  \r\n// @RequestParam(value = \"pageNum\", required = false, defaultValue = \"1\") Integer pageNum,\r\n// @RequestParam(value = \"vendorNum\", required = false, defaultValue = \"\") String vendorNum,\r\n// @RequestParam(value = \"customerNum\", required = false, defaultValue = \"\") String custNum,\r\n// @RequestParam(value = \"location\", required = false, defaultValue = \"\") String location,\r\n// @RequestParam(value = \"status\", required = false, defaultValue = \"5\") int status,\r\n// @RequestParam(value = \"pageSize\", required = false, defaultValue = \"10\") Integer pageSize,\r\n// @RequestParam(value = \"startDate\", required = false, defaultValue = \"10\") String startDate,\r\n// @RequestParam(value = \"endDate\", required = false, defaultValue = \"10\") String endDate, \r\n \r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}