{"version":3,"sources":["hooks/useFormValidation.js","constants.js","services/validator.service.js","components/search-contact/search-contact.component.jsx","state/contexts/contacts.context.js","components/new-contact/create-contact.component.jsx","components/update-contact/update-contact.component.jsx","components/delete-contact/delete-contact.component.jsx","components/contact-list/contact-item.component.jsx","components/contact-list/contacts.component.jsx","components/contact-profile/contact-profile.component.jsx","layout.component.jsx","notifier.jsx","state/constants/contacts.constants.js","state/reducers/contacts.reducers.js","axios.js","state/actions/contacts.actions.js","App.js","serviceWorker.js","index.js"],"names":["useFormValidation","initialState","validate","submitHandler","context","_useState","useState","Object","objectSpread","_useState2","slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","isSubmitting","setSubmitting","validateInputs","validationErrors","useEffect","keys","length","handleInputChange","event","defineProperty","target","name","value","handleSubmit","handleBlur","newContact","email","fullname","phone","address","occupation","searchContact","key","contactValidator","test","searchContactValidator","SearchContact","_useFormValidation","react_default","a","createElement","className","Form","Input","action","icon","color","onClick","placeholder","onChange","onBlur","error","ContactsContext","React","createContext","AddContact","_ref","history","useContext","loading","addContact","successMessage","setTimeout","push","spin","Field","control","iconPosition","Button","content","basic","UpdateContact","match","contact","getContact","updateContact","params","id","DeleteContact","getContacts","deleteContact","deleteSuccess","open","setOpen","Fragment","Dropdown","Item","text","style","Confirm","header","onCancel","onConfirm","ContactItem","dropDownTrigger","Icon","Table","Row","Cell","Checkbox","width","height","backgroundColor","borderRadius","display","alignItems","justifyContent","size","react_router_dom","to","concat","_id","Menu","position","item","pointing","trigger","delete_contact_component","Contacts","contacts","contactRow","map","contact_item_component","unstackable","Body","ContactProfile","Segment","Header","Layout","Sider","Content","Footer","DefaultLayout","collapsed","setCollapsed","isMobile","setIsMobile","updatePredicate","window","innerWidth","addEventListener","removeEventListener","layout","minHeight","collapsible","onCollapse","theme","breakpoint","collapsedWidth","padding","borderBottom","search_contact_component","background","react_router","path","component","Contact","exact","render","props","create_contact_component","assign","contactId","textAlign","Notifier","errorMessage","clearErrors","notify","message","tag","toast","onClose","react_toastify","contactConstants","nothing","contactReducer","state","arguments","undefined","type","payload","data","axiosInstance","axios","create","headers","Content-Type","defaults","baseURL","dispatch","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","t0","console","log","stop","_ref2","_callee2","_context2","_x","apply","this","_ref3","_callee3","_context3","patch","_","omit","_x2","_ref4","_callee4","_context4","post","status","_x3","_ref5","_callee5","_context5","delete","_x4","App","_useReducer","useReducer","_useReducer2","contacts_context","Provider","notifier","basename","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d58034d8.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport function useFormValidation (initialState, validate, submitHandler, context) {\r\n    let [values, setValues] = useState({...initialState});\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n    useEffect(() => {setValues({...initialState})}, [initialState])\r\n\r\n    useEffect(() => {\r\n        if (isSubmitting) {\r\n            if (Object.keys(errors).length === 0 ) {\r\n                submitHandler(values);\r\n                setSubmitting(false);\r\n            }\r\n            else {\r\n                setSubmitting(false);\r\n            }\r\n        }\r\n        \r\n    }, [errors])\r\n\r\n    function handleInputChange (event) {\r\n        setValues({\r\n            ...values, \r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    function validateInputs () {\r\n        const validationErrors = validate(values);\r\n        setErrors(validationErrors)\r\n    }\r\n\r\n    function handleBlur () {\r\n        validateInputs();\r\n    }\r\n\r\n    function handleSubmit () {\r\n        validateInputs();\r\n        setSubmitting(true);\r\n    }\r\n\r\n    return { values, handleInputChange, handleSubmit, handleBlur, errors }\r\n}","export const initialState = {\r\n    newContact: {\r\n        email: \"\",\r\n        fullname: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        occupation: \"\"\r\n    },\r\n    searchContact: {\r\n        key: \"\"\r\n    }\r\n}\r\n\r\nexport const genderOptions = [\r\n    { text: 'Female', value: 'female' },\r\n    { text: 'Male', value: 'male' }\r\n]","export const  contactValidator = (values) => {\r\n    let errors = {};\r\n    // Email Errors\r\n  if (!values.email) {\r\n    errors.email = \"Email Required\";\r\n    return errors\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n    return errors\r\n  }\r\n  // Fullname Errors\r\n  if (!values.fullname) {\r\n    errors.fullname = \"Fullname Required\";\r\n    return errors\r\n  } else if (values.fullname.length < 6) {\r\n    errors.fullname = \"Fullname must be at least 6 characters\";\r\n    return errors\r\n  }\r\n\r\n  // phone number error\r\n  if (!values.phone) {\r\n    errors.phone = \"Phone Number Required\";\r\n    return errors\r\n  }\r\n  return errors;\r\n}\r\n\r\nexport const searchContactValidator = (values) => {\r\n    let errors = {}\r\n\r\n    if (!values.key) {\r\n        errors.key = \"Search Key is required\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n// export const ValidatorService = {\r\n//     contactValidator\r\n// }","import React from 'react';\r\nimport { Form, Input } from 'semantic-ui-react';\r\n\r\nimport { useFormValidation } from \"../../hooks\";\r\nimport { initialState } from '../../constants';\r\nimport { searchContactValidator } from '../../services';\r\nimport './search-contact.css';\r\n\r\nfunction SearchContact () {\r\n    const { \r\n            values, \r\n            handleInputChange, \r\n            handleSubmit,\r\n            handleBlur,\r\n            errors\r\n        } = useFormValidation(initialState.searchContact, searchContactValidator, null, 'search');\r\n\r\n    return (\r\n        <div className=\"search-contact-wrap\">\r\n            <Form className=\"search-form\">       \r\n                <Input\r\n                className=\"search-input\" \r\n                    action={{ icon: 'search', color: 'blue', onClick: handleSubmit }} \r\n                    name=\"key\" placeholder='Search...' \r\n                    onChange={handleInputChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.key}\r\n                    error={errors.key && true} />\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchContact;","import React from 'react';\r\n\r\nconst ContactsContext = React.createContext();\r\n\r\nexport default ContactsContext;","import React, { useEffect, useContext, } from 'react';\r\nimport { Form, Input, Button } from 'semantic-ui-react';\r\nimport { Spin } from 'antd';\r\n\r\nimport { useFormValidation } from \"../../hooks\";\r\nimport { initialState } from '../../constants';\r\nimport { contactValidator } from '../../services';\r\nimport ContactsContext from '../../state/contexts/contacts.context';\r\nimport AppLoader from '../../app-loader';\r\n\r\nimport './create-contact.css';\r\n\r\nfunction AddContact ({history}) {\r\n    const context = useContext(ContactsContext);\r\n    const { loading, addContact, successMessage } = context;\r\n\r\n    useEffect(()=> {\r\n        if (successMessage) {\r\n            setTimeout(() => history.push('/'), 5000)\r\n        }\r\n    }, [successMessage])\r\n\r\n    const { \r\n        values, \r\n        handleInputChange, \r\n        handleSubmit, \r\n        handleBlur,\r\n        errors,\r\n    } = useFormValidation(initialState.newContact, contactValidator, addContact, 'create');\r\n\r\n    return (\r\n        <div className=\"relative add-contact-wrap\">\r\n            {/* {loading && <AppLoader /> } */}\r\n            {loading && <Spin/>}\r\n            <Form>\r\n                <Form.Field\r\n                    control={Input}\r\n                    name=\"email\"\r\n                    icon=\"mail\"\r\n                    value={values.email || ''}\r\n                    placeholder=\"Email\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleBlur}\r\n                    error={errors.email && true}\r\n                    />\r\n                    \r\n                    { errors.email && <p > {errors.email} </p>}\r\n                <Form.Field\r\n                    control={Input}\r\n                    name=\"fullname\"\r\n                    icon=\"pencil\"\r\n                    value={values.fullname || ''}\r\n                    placeholder=\"Fullname\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleBlur}\r\n                    error={errors.fullname && true}\r\n                    />\r\n                { errors.fullname && <p > {errors.fullname} </p>}\r\n\r\n                <Form.Field\r\n                    control={Input}\r\n                    name=\"phone\"\r\n                    icon=\"phone square\"\r\n                    value={values.phone || ''}\r\n                    placeholder=\"Phone\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n                { errors.phone && <p > {errors.phone} </p>}\r\n\r\n                <Form.Field\r\n                    control={Input}\r\n                    name=\"address\"\r\n                    icon=\"address card\"\r\n                    value={values.address || ''}\r\n                    placeholder=\"Address\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                <Form.Field\r\n                    control={Input}\r\n                    name=\"occupation\"\r\n                    icon=\"address card\"\r\n                    value={values.occupation || ''}\r\n                    placeholder=\"Occupation\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                <Button \r\n                    content=\"Add Contact\"\r\n                    basic\r\n                    color=\"blue\"\r\n                    icon=\"add\"\r\n                    onClick={handleSubmit}\r\n                    />\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddContact ;\r\n","import React, { useEffect, useContext, } from 'react';\r\nimport { Form, Input, Button} from 'semantic-ui-react';\r\nimport { Spin } from 'antd';\r\n\r\nimport { useFormValidation } from \"../../hooks\";\r\nimport { contactValidator } from '../../services';\r\nimport ContactsContext from '../../state/contexts/contacts.context';\r\n// import AppLoader from '../../app-loader';\r\n\r\nfunction UpdateContact ({match}) {\r\n    const context = useContext(ContactsContext);\r\n    const { contact, getContact, updateContact, loading } = context;\r\n\r\n    useEffect(()=> {\r\n        getContact(match.params.id)\r\n    }, [])\r\n\r\n    const { \r\n        values, \r\n        handleInputChange, \r\n        handleSubmit, \r\n        handleBlur,\r\n        errors,\r\n    } = useFormValidation(contact, contactValidator, updateContact, 'update');\r\n\r\n    return (\r\n        <div className=\"relative add-contact-wrap\">\r\n            {/* {loading && <AppLoader /> } */}\r\n            {loading && <Spin/>}\r\n            <Form>\r\n                <Form.Field\r\n                    control={Input}\r\n                    name=\"email\"\r\n                    icon=\"mail\"\r\n                    value={values.email || ''}\r\n                    placeholder=\"Email\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleBlur}\r\n                    error={errors.email && true}\r\n                    />\r\n                    \r\n                    { errors.email && <p > {errors.email} </p>}\r\n                <Form.Field\r\n                    control={Input}\r\n                    name=\"fullname\"\r\n                    icon=\"pencil\"\r\n                    value={values.fullname || ''}\r\n                    placeholder=\"Fullname\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleBlur}\r\n                    error={errors.fullname && true}\r\n                    />\r\n                { errors.fullname && <p > {errors.fullname} </p>}\r\n\r\n                <Form.Field\r\n                    control={Input}\r\n                    name=\"phone\"\r\n                    icon=\"phone square\"\r\n                    value={values.phone || ''}\r\n                    placeholder=\"Phone\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                <Form.Field\r\n                    control={Input}\r\n                    name=\"address\"\r\n                    icon=\"address card\"\r\n                    value={values.address || ''}\r\n                    placeholder=\"Address\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                <Form.Field\r\n                    control={Input}\r\n                    name=\"occupation\"\r\n                    icon=\"address card\"\r\n                    value={values.occupation || ''}\r\n                    placeholder=\"Occupation\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n                    \r\n                <Button \r\n                    content=\"Update Contact\"\r\n                    basic\r\n                    color=\"blue\"\r\n                    icon=\"user\"\r\n                    onClick={handleSubmit}\r\n                    />\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateContact ;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Dropdown, Confirm } from 'semantic-ui-react';\r\n\r\nimport ContactsContext from '../../state/contexts/contacts.context';\r\n\r\nconst DeleteContact = ({id}) => {\r\n    const context = useContext(ContactsContext);\r\n    const { getContacts, deleteContact, deleteSuccess } = context;\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (deleteSuccess) {\r\n            setTimeout(() => getContacts(), 5000);\r\n        }\r\n    }, [deleteSuccess])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dropdown.Item text='Delete' icon=\"user delete\" style={{color: 'red'}} onClick={() => setOpen(true)} />\r\n            <Confirm\r\n                open={open}\r\n                header=\"Confirm Delete\"\r\n                content=\"Are you sure you want to delete this contact?\"\r\n                onCancel={() => setOpen(false)}\r\n                onConfirm={() => {setOpen(false); deleteContact(id)}}/>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default DeleteContact;","import React from 'react';\r\nimport { Table, Checkbox, Icon, Menu, Dropdown } from 'semantic-ui-react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n// import userIcon from '../../assets/images/user.jpg'\r\n\r\nimport DeleteContact from '../delete-contact/delete-contact.component';\r\n\r\nconst ContactItem = ({contact}) => {\r\n\r\n    const dropDownTrigger = <Icon name=\"ellipsis vertical\" />\r\n    const style= {\r\n        width: '40px',\r\n        height: '40px',\r\n        backgroundColor: '#c1c1c1',\r\n        borderRadius: '50%',\r\n        color: '#ffffff !important',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n\r\n    return (\r\n        <Table.Row>\r\n            <Table.Cell><Checkbox /></Table.Cell>\r\n            <Table.Cell><div className=\"user-icon\" style={style}><Icon name=\"user\" size=\"big\" /></div></Table.Cell>\r\n            {/* <Table.Cell><span className=\"ant-avatar ant-avatar-lg ant-avatar-circle ant-avatar-image\"><img src={userIcon} alt=\"user\" /></span></Table.Cell> */}\r\n            <Table.Cell><Link to={`/profile/${contact._id}`}>{contact.fullname}</Link></Table.Cell>\r\n            <Table.Cell>{contact.email}</Table.Cell>\r\n            <Table.Cell>{contact.phone}</Table.Cell>\r\n            <Table.Cell>{contact.address}</Table.Cell>\r\n            <Table.Cell>\r\n                <Menu.Menu position='right'>\r\n                    <Dropdown item pointing='top right' trigger={dropDownTrigger} icon={null}>\r\n                        <Dropdown.Menu>                                   \r\n                                <NavLink to={`/edit-contact/${contact._id}`}>\r\n                            <Dropdown.Item text='Edit' icon=\"edit\" />\r\n                            </NavLink>\r\n                            <DeleteContact id={contact._id}/>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Menu>\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}\r\n\r\nexport default ContactItem;","import React, { useContext, useEffect } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { Spin } from 'antd';\r\n\r\nimport ContactItem from './contact-item.component';\r\nimport ContactsContext from '../../state/contexts/contacts.context';\r\n// import AppLoader from '../../app-loader';\r\nimport './contact-list.css';\r\n\r\nfunction Contacts () {\r\n  const context = useContext(ContactsContext);\r\n  const { contacts, getContacts, loading } = context;\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n  },[])\r\n\r\n  const contactRow = contacts && contacts.map(contact => {\r\n    return <ContactItem key={contact._id} contact={contact} />\r\n  })\r\n\r\n\r\n    return (\r\n      <div className=\"relative\">\r\n        {/* {loading &&<AppLoader /> } */}\r\n        {loading && <Spin/>}\r\n      <Table basic='very' unstackable>\r\n        <Table.Body>\r\n          {contactRow}\r\n        </Table.Body>\r\n      </Table>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import React, { useContext, useEffect } from 'react';\r\nimport { Segment, Button, Label } from 'semantic-ui-react';\r\n\r\nimport ContactsContext from '../../state/contexts/contacts.context';\r\nimport './contact-profile.scss';\r\n\r\nconst ContactProfile = ({match}) => {\r\n  const context = useContext(ContactsContext);\r\n  const { loading, getContact, contact } = context;\r\n\r\n  useEffect(() => {\r\n    getContact(match.params.id)\r\n  }, [match.params.id])\r\n\r\n    return (\r\n        <Segment className=\"contact-profile\" loading={loading}>\r\n          <div className=\"profile-header\">\r\n            <div className=\"profile-pic\">\r\n\r\n            </div>\r\n            <div className=\"profile-name\">{contact.fullname}</div>\r\n            <div className=\"profile-address\">{contact.address}</div>\r\n          </div>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default ContactProfile;","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport { Layout} from 'antd';\r\nimport { Icon, Button } from 'semantic-ui-react'\r\n\r\nimport SearchContact from './components/search-contact/search-contact.component';\r\nimport AddContact from './components/new-contact/create-contact.component';\r\nimport UpdateContact from './components/update-contact/update-contact.component';\r\nimport Contact from './components/contact-list/contacts.component';\r\nimport ContactProfile from './components/contact-profile/contact-profile.component';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nfunction DefaultLayout ({match}) {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    updatePredicate();\r\n    window.addEventListener(\"resize\", updatePredicate);\r\n\r\n    return () => window.removeEventListener(\"resize\", updatePredicate);\r\n  })\r\n\r\n  function toggle () {\r\n    setCollapsed(!collapsed);\r\n  }\r\n\r\n  function updatePredicate () {\r\n    setIsMobile(window.innerWidth <= 576 );\r\n  }\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider \r\n          collapsible \r\n          collapsed={collapsed} \r\n          onCollapse={toggle} \r\n          theme=\"light\" \r\n          width=\"235px\" \r\n          breakpoint=\"md\" \r\n          collapsedWidth={isMobile ? 0 : 80}>\r\n          <Link to=\"/\">\r\n            <div className=\"app-brand\">\r\n              <div className=\"app-brand__logo\">\r\n                <Icon name=\"address book outline\" size=\"big\"/>\r\n              </div>\r\n              <div className=\"app-brand__title\">\r\n                <h3>&nbsp; &nbsp; Contacts</h3>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n\r\n          <div className=\"app-link \">\r\n            <Link to=\"/new-contact\">\r\n                <div className=\"app-link__item margin-bottom\">\r\n                <span className=\"app-link__item-icon\"><Icon name=\"add\" color=\"blue\"/></span> &nbsp; &nbsp;\r\n                <span className=\"app-link__item-description\"><Button className=\"new-contact__btn\" content=\"New Contact\" /></span>\r\n                </div>\r\n            </Link>\r\n\r\n            <Link to=\"/\">\r\n            <div className=\"app-link__item\">\r\n              <span className=\"app-link__item-icon\"><Icon name=\"list\" /></span> &nbsp; &nbsp;\r\n              <span className=\"app-link__item-description\">All contacts</span>\r\n            </div>\r\n            </Link>\r\n\r\n            <div className=\"app-link__item\">\r\n              <span className=\"app-link__item-icon\"><Icon name=\"undo alternate\" /></span> &nbsp; &nbsp;\r\n              <span className=\"app-link__item-description\">Frequently contacted</span>\r\n            </div>\r\n            <div className=\"app-link__item\">\r\n              <span className=\"app-link__item-icon\"><Icon name=\"star\" /></span> &nbsp; &nbsp;\r\n              <span className=\"app-link__item-description\">Starred contacts</span>\r\n            </div>\r\n          </div>\r\n        </Sider>\r\n        <Layout>\r\n          <Header style={{ padding: 0, backgroundColor: '#ffffff', borderBottom: '1px solid #edeeee' }} theme=\"light\">\r\n            <SearchContact />\r\n          </Header>\r\n          <Content>\r\n            <div style={{ background: '#fff', minHeight: 360 }}>\r\n                <Switch>\r\n                    <Route path=\"/\" component={Contact} exact/>\r\n                    <Route path=\"/profile/:id\" component={ContactProfile}/>\r\n                    <Route path=\"/new-contact\" render={(props) => <AddContact {...props} contactId=\"meeeee\"/>}/>\r\n                    <Route path=\"/edit-contact/:id\" component={UpdateContact} />\r\n                </Switch>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n      </Layout>\r\n  );\r\n}\r\n\r\nexport default DefaultLayout;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport ContactsContext from './state/contexts/contacts.context';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n \r\nfunction Notifier() {\r\n    const context = useContext(ContactsContext)\r\n    const { errorMessage, successMessage, clearErrors } = context;\r\n\r\n    useEffect(()=> {\r\n        const notify = (message, tag) => toast[tag](message, {\r\n            onClose: () => clearErrors()\r\n          });\r\n\r\n        if (errorMessage) {\r\n            notify(errorMessage, 'error');\r\n        }\r\n        \r\n        if (successMessage) {\r\n            notify(successMessage, 'success')\r\n        }\r\n    }, [errorMessage, successMessage])\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\n  export default Notifier;","export const contactConstants = {\r\n    GET_CONTACTS_REQUEST: \"GET_CONTACTS_REQUEST\",\r\n    GET_CONTACTS_SUCCESS: \"GET_CONTACTS_SUCCESS\",\r\n    GET_CONTACTS_FAILURE: \"GET_CONTACTS_FAILURE\",\r\n    GET_CONTACT_REQUEST: \"GET_CONTACT_REQUEST\",\r\n    GET_CONTACT_SUCCESS: \"GET_CONTACT_SUCCESS\",\r\n    UPDATE_CONTACT_REQUEST: \"UPDATE_CONTACT_REQUEST\",\r\n    UPDATE_CONTACT_SUCCESS: \"UPDATE_CONTACT_SUCCESS\",\r\n    UPDATE_CONTACT_FAILURE: \"UPDATE_CONTACT_FAILURE\",\r\n    ADD_CONTACT_REQUEST: \"ADD_CONTACT_REQUEST\",\r\n    ADD_CONTACT_SUCCESS: \"ADD_CONTACT_SUCCESS\",\r\n    ADD_CONTACT_FAILURE: \"ADD_CONTACT_FAILURE\",\r\n    DELETE_CONTACT_REQUEST: \"DELETE_CONTACT_REQUEST\",\r\n    DELETE_CONTACT_SUCCESS: \"DELETE_CONTACT_SUCCESS\",\r\n    DELETE_CONTACT_FAILURE: \"DELETE_CONTACT_FAILURE\",\r\n    CLEAR_ERRORS: \"CLEAR_ERRORS\"\r\n}","import {contactConstants } from '../constants/contacts.constants'\r\n\r\nexport const initialState = {\r\n    contacts: [],\r\n    contact: { nothing: 'for you'},\r\n    loading: false,\r\n    errorMessage: null,\r\n    successMessage: null,\r\n    deleteSuccess: false\r\n}\r\n\r\nexport const contactReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case contactConstants.GET_CONTACTS_REQUEST:\r\n            return {\r\n                ...state,\r\n               loading: true\r\n            }\r\n        case contactConstants.GET_CONTACTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                contacts: action.payload.data,\r\n                loading: false\r\n            }\r\n\r\n        case contactConstants.GET_CONTACTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMessage: action.error.message\r\n            }\r\n        \r\n        case contactConstants.GET_CONTACT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case contactConstants.GET_CONTACT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                contact: action.payload.data,\r\n                loading: false\r\n            }\r\n\r\n        case contactConstants.UPDATE_CONTACT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case contactConstants.UPDATE_CONTACT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                contact: action.payload.data,\r\n                successMessage: action.payload.message,\r\n                loading: false\r\n            }\r\n\r\n        case contactConstants.UPDATE_CONTACT_FAILURE:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.payload.message,\r\n                loading: false\r\n            }\r\n\r\n        case contactConstants.ADD_CONTACT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case contactConstants.ADD_CONTACT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                successMessage: action.payload.message,\r\n                loading: false\r\n            }\r\n\r\n        case contactConstants.ADD_CONTACT_FAILURE:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.error.message,\r\n                loading: false\r\n            }\r\n\r\n            case contactConstants.DELETE_CONTACT_REQUEST:\r\n                    return {\r\n                        ...state,\r\n                        loading: true\r\n                    }\r\n                \r\n            case contactConstants.DELETE_CONTACT_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    successMessage: action.payload.message,\r\n                    deleteSuccess: true,\r\n                    loading: false\r\n                }\r\n    \r\n            case contactConstants.DELETE_CONTACT_FAILURE:\r\n                return {\r\n                    ...state,\r\n                    errorMessage: action.error.message,\r\n                    loading: false\r\n                }\r\n\r\n        case contactConstants.CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                errorMessage: null,\r\n                successMessage: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n})\r\n\r\naxiosInstance.defaults.baseURL = \"https://contacts-registry.herokuapp.com/\"\r\n\r\nexport default axiosInstance;","import { contactConstants } from '../constants/contacts.constants';\r\nimport axiosInstance from '../../axios';\r\nimport _ from 'lodash';\r\n\r\nexport const getContacts = (dispatch) => async () => {\r\n    dispatch({type: contactConstants.GET_CONTACTS_REQUEST});\r\n    try {\r\n        const response = await  axiosInstance.get('/contacts')\r\n        dispatch({type: contactConstants.GET_CONTACTS_SUCCESS, payload: response.data})\r\n    }\r\n    catch(error) {\r\n        dispatch({type: contactConstants.GET_CONTACTS_FAILURE, error})\r\n        console.log('error: ', error)\r\n    }\r\n}\r\n\r\nexport const getContact = (dispatch) => async (id) => {\r\n    dispatch({type: contactConstants.GET_CONTACT_REQUEST})\r\n    try {\r\n        const response = await axiosInstance.get(`/contacts/${id}`)\r\n        dispatch({type: contactConstants.GET_CONTACT_SUCCESS, payload: response.data})\r\n    }\r\n    catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const updateContact = (dispatch) => async (contact) => {\r\n    dispatch({type: contactConstants.UPDATE_CONTACT_REQUEST})\r\n    try {\r\n        const response = await axiosInstance.patch(`/contacts/${contact._id}`, {\r\n            ..._.omit(contact, ['_id'])\r\n        })\r\n        dispatch({type: contactConstants.UPDATE_CONTACT_SUCCESS, payload: response.data})\r\n    }\r\n    catch(error) {\r\n        dispatch({type: contactConstants.UPDATE_CONTACT_FAILURE, error})\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const addContact = (dispatch) => async (contact) => {\r\n    dispatch({type: contactConstants.ADD_CONTACT_REQUEST})\r\n    try {\r\n        var response = await axiosInstance.post('/contacts', {\r\n            ...contact\r\n        })\r\n        if (response.status === 'error') {\r\n            dispatch({type: contactConstants.ADD_CONTACT_FAILURE, error: response.errors})\r\n        } else {\r\n            dispatch({type: contactConstants.ADD_CONTACT_SUCCESS, payload: response.data})\r\n        }    \r\n    }\r\n    catch(error) {\r\n        dispatch({type: contactConstants.ADD_CONTACT_FAILURE, error})\r\n    }\r\n}\r\n\r\nexport const deleteContact = (dispatch) => async (id) => {\r\n    dispatch({type: contactConstants.DELETE_CONTACT_REQUEST})\r\n    try {\r\n        const response = await axiosInstance.delete(`/contacts/${id}`)\r\n        dispatch({type: contactConstants.DELETE_CONTACT_SUCCESS, payload: response.data})\r\n    }\r\n    catch(error) {\r\n        dispatch({type: contactConstants.DELETE_CONTACT_FAILURE, error})\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const clearErrors = (dispatch) => () => {\r\n    dispatch({type: contactConstants.CLEAR_ERRORS})\r\n}","import React, { useReducer } from 'react';\r\nimport { Route, HashRouter as Router } from 'react-router-dom';\r\n\r\nimport DefaultLayout from './layout.component';\r\nimport ContactsContext from './state/contexts/contacts.context';\r\nimport Notifier from './notifier';\r\nimport { initialState, contactReducer } from './state/reducers/contacts.reducers';\r\nimport { getContacts, getContact, updateContact, addContact, deleteContact, clearErrors } from './state/actions/contacts.actions'\r\n\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(contactReducer, initialState)\r\n\r\n  return (\r\n    <ContactsContext.Provider\r\n      value={{\r\n        ...state,\r\n        getContacts: getContacts(dispatch),\r\n        getContact: getContact(dispatch),\r\n        clearErrors: clearErrors(dispatch),\r\n        updateContact: updateContact(dispatch),\r\n        addContact: addContact(dispatch),\r\n        deleteContact: deleteContact(dispatch)\r\n      }}\r\n     >\r\n       <Notifier />\r\n      <Router basename=\"/\">\r\n        <Route path=\"/\" component={DefaultLayout}/>\r\n      </Router>\r\n    </ContactsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n// [‎19-‎Jun-‎19 9:27 AM]  Joy Ichetaonye:  \r\n// @RequestParam(value = \"pageNum\", required = false, defaultValue = \"1\") Integer pageNum,\r\n// @RequestParam(value = \"vendorNum\", required = false, defaultValue = \"\") String vendorNum,\r\n// @RequestParam(value = \"customerNum\", required = false, defaultValue = \"\") String custNum,\r\n// @RequestParam(value = \"location\", required = false, defaultValue = \"\") String location,\r\n// @RequestParam(value = \"status\", required = false, defaultValue = \"5\") int status,\r\n// @RequestParam(value = \"pageSize\", required = false, defaultValue = \"10\") Integer pageSize,\r\n// @RequestParam(value = \"startDate\", required = false, defaultValue = \"10\") String startDate,\r\n// @RequestParam(value = \"endDate\", required = false, defaultValue = \"10\") String endDate, \r\n \r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}